#!/bin/bash

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[0;33m'
NC='\033[0m' # No Color

# Default values
TOP_MODULE=""
INPUT_VERILOG=""
OUTPUT_VERILOG=""
SYNTH_SCRIPT="synth/yosys/synth_module.tcl"
DIAGRAM_PREFIX=""
GENERATE_DIAGRAM=false

# Function to print usage information
print_usage() {
    echo "Usage: $0 [options]"
    echo "Options:"
    echo "  -m MODULE  Top module name (required)"
    echo "  -i FILE    Input Verilog file (required)"
    echo "  -o FILE    Output synthesized Verilog file"
    echo "  -s FILE    Synthesis TCL script to use (default: synth/yosys/synth_module.tcl)"
    echo "  -d PREFIX  Diagram file prefix"
    echo "  -g         Enable diagram generation (default: disabled)"
    echo "  -h         Display this help message"
    exit 1
}

# Parse command-line options
while getopts "m:i:o:s:d:gh" opt; do
    case $opt in
        m) TOP_MODULE="$OPTARG" ;;
        i) INPUT_VERILOG="$OPTARG" ;;
        o) OUTPUT_VERILOG="$OPTARG" ;;
        s) SYNTH_SCRIPT="$OPTARG" ;;
        d) DIAGRAM_PREFIX="$OPTARG" ;;
        g) GENERATE_DIAGRAM=true ;;
        h) print_usage ;;
        *) print_usage ;;
    esac
done

# Check for required arguments
if [ -z "$TOP_MODULE" ] || [ -z "$INPUT_VERILOG" ]; then
    echo -e "${RED}Error: Top module name (-m) and input Verilog file (-i) are required.${NC}"
    print_usage
fi

# Set default values for optional arguments if not provided
if [ -z "$OUTPUT_VERILOG" ]; then
    OUTPUT_VERILOG="synth/yosys/${TOP_MODULE}_synth.v"
fi

if [ -z "$DIAGRAM_PREFIX" ]; then
    DIAGRAM_PREFIX="synth/diagrams/${TOP_MODULE}_diagram"
fi

echo -e "${BLUE}Starting Yosys Gate-Level Synthesis...${NC}"
echo -e "${YELLOW}Module: $TOP_MODULE${NC}"
echo -e "${YELLOW}Input: $INPUT_VERILOG${NC}"
echo -e "${YELLOW}Output: $OUTPUT_VERILOG${NC}"

# Check if input file exists
if [ ! -f "$INPUT_VERILOG" ]; then
    echo -e "${RED}Error: Input file $INPUT_VERILOG not found!${NC}"
    exit 1
fi

# Check if synthesis script exists
if [ ! -f "$SYNTH_SCRIPT" ]; then
    echo -e "${RED}Error: Synthesis script $SYNTH_SCRIPT not found!${NC}"
    exit 1
fi

# Create output directories if they don't exist
mkdir -p "$(dirname "$OUTPUT_VERILOG")"
mkdir -p "$(dirname "$DIAGRAM_PREFIX")"

# Export environment variables for the Yosys TCL script
export TOP_MODULE
export INPUT_VERILOG
export OUTPUT_VERILOG
export DIAGRAM_PREFIX

# Run Yosys with the TCL script
echo -e "${YELLOW}Running Yosys synthesis with TCL script...${NC}"
yosys -Q -q -c $SYNTH_SCRIPT

# Check if synthesis was successful
if [ $? -ne 0 ]; then
    echo -e "${RED}Synthesis failed!${NC}"
    exit 1
else
    echo -e "${GREEN}Synthesis completed successfully.${NC}"
    echo -e "${GREEN}Gate-level Verilog written to $OUTPUT_VERILOG${NC}"
fi

# Post-process the output file to remove the Yosys generation comment and blank line
# This is to avoid a parsing error when reading the file with fiction
echo -e "${YELLOW}Post-processing output file to remove Yosys header...${NC}"
if [ -f "$OUTPUT_VERILOG" ]; then
    # Create a temporary file
    TEMP_FILE=$(mktemp)
    # Use sed to remove the Yosys generation comment and any blank lines that follow it
    # until the first non-blank line is encountered
    sed -e '/^\/\* Generated by Yosys/d' -e '/./,$!d' "$OUTPUT_VERILOG" > "$TEMP_FILE"
    # Replace the original file with the modified content
    mv "$TEMP_FILE" "$OUTPUT_VERILOG"
    echo -e "${GREEN}Yosys header removed from output file.${NC}"
else
    echo -e "${RED}Warning: Output file $OUTPUT_VERILOG not found for post-processing!${NC}"
fi

# Generate visual diagram if graphviz is installed and flag is enabled
if [ "$GENERATE_DIAGRAM" = true ]; then
    DOT_FILE="${DIAGRAM_PREFIX}.dot"
    PNG_FILE="${DIAGRAM_PREFIX}.png"
    if command -v dot &> /dev/null && [ -f "$DOT_FILE" ]; then
        echo -e "${BLUE}Generating visual diagram...${NC}"
        dot -Tpng "$DOT_FILE" -o "$PNG_FILE"
        echo -e "${GREEN}Diagram generated: $PNG_FILE${NC}"
    else
        echo -e "${YELLOW}Note: Graphviz not installed or DOT file not found. Could not generate diagram.${NC}"
    fi
else
    echo -e "${YELLOW}Diagram generation is disabled. Use -g flag to enable.${NC}"
fi

echo -e "${BLUE}Synthesis Statistics:${NC}"
echo -e "${YELLOW}----------------------------------------${NC}"
grep -A 20 "Printing statistics" yosys.log || echo -e "${YELLOW}Statistics not available${NC}"
echo -e "${YELLOW}----------------------------------------${NC}"

echo -e "${GREEN}All done!${NC}" 